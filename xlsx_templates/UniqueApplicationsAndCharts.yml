#The XLSX report to use#
workbook_name: 'UniqueApplications.xlsx'
worksheets:
  #The worksheet/tab to create the report in#
  - worksheet_name: 'UniqueAppResourceUsage'
    worksheet_type: 'records'
    attributes:
      #If you want to freeze panes#
      freeze_panes:
          row: 1
      #If you want to special format columns#
      xlsx_column_formats:
      #The SQLite Query to run#
      sql_query: |
          SELECT
              SruDbIdMapTable.IdBlob AS Fullname,
              BasenameN(SruDbIdMapTable.IdBlob,2) AS Name,
              SUM(ApplicationResourceUsageProvider.FaceTime) AS "Total Face Time",
              SUM(ApplicationResourceUsageProvider.BackgroundBytesRead) AS "Total Background Read Bytes",
              SUM(ApplicationResourceUsageProvider.BackgroundBytesWritten) AS "Total Background Write Bytes",
              SUM(ApplicationResourceUsageProvider.BackgroundCycleTime) AS "Total Background Cycle Time",
              SUM(ApplicationResourceUsageProvider.BackgroundNumReadOperations) AS "Total Background Read Ops",
              SUM(ApplicationResourceUsageProvider.BackgroundNumWriteOperations) AS "Total Background Write Ops",
              SUM(ApplicationResourceUsageProvider.ForegroundBytesRead) AS "Total Foreground Read Bytes",
              SUM(ApplicationResourceUsageProvider.ForegroundBytesWritten) AS "Total Foreground Write Bytes",
              SUM(ApplicationResourceUsageProvider.ForegroundCycleTime) AS "Total Foreground Cycle Time",
              SUM(ApplicationResourceUsageProvider.ForegroundNumReadOperations) AS "Total Foreground Read Ops",
              SUM(ApplicationResourceUsageProvider.ForegroundNumWriteOperations) AS "Total Foreground Write Ops",

              SUM(ApplicationResourceUsageProvider.BackgroundCycleTime) +
              SUM(ApplicationResourceUsageProvider.ForegroundCycleTime) AS "Total Cycle Time",

              SUM(ApplicationResourceUsageProvider.BackgroundBytesRead) +
              SUM(ApplicationResourceUsageProvider.BackgroundBytesWritten) AS "Total Bytes Background",

              SUM(ApplicationResourceUsageProvider.ForegroundBytesRead) +
              SUM(ApplicationResourceUsageProvider.ForegroundBytesWritten) AS "Total Bytes Foreground",

              SUM(ApplicationResourceUsageProvider.BackgroundNumReadOperations) +
              SUM(ApplicationResourceUsageProvider.BackgroundNumWriteOperations) AS "Total Operations Background",

              SUM(ApplicationResourceUsageProvider.ForegroundNumReadOperations) +
              SUM(ApplicationResourceUsageProvider.ForegroundNumWriteOperations) AS "Total Operations Foreground",

              SUM(ApplicationResourceUsageProvider.BackgroundBytesRead) +
              SUM(ApplicationResourceUsageProvider.BackgroundBytesWritten) +
              SUM(ApplicationResourceUsageProvider.ForegroundBytesRead) +
              SUM(ApplicationResourceUsageProvider.ForegroundBytesWritten) AS "Total Bytes",

              SUM(ApplicationResourceUsageProvider.BackgroundNumReadOperations) +
              SUM(ApplicationResourceUsageProvider.BackgroundNumWriteOperations) +
              SUM(ApplicationResourceUsageProvider.ForegroundNumReadOperations) +
              SUM(ApplicationResourceUsageProvider.ForegroundNumWriteOperations) AS "Total Operations"

          FROM ApplicationResourceUsageProvider
          INNER JOIN SruDbIdMapTable ON
              ApplicationResourceUsageProvider.AppId = SruDbIdMapTable.IdIndex
          GROUP BY ApplicationResourceUsageProvider.AppId
          ORDER BY "Total Cycle Time" DESC
  - worksheet_name: 'UniqueAppNetworkUsage'
    worksheet_type: 'records'
    attributes:
      #If you want to freeze panes#
      freeze_panes:
          row: 1
      #If you want to special format columns#
      xlsx_column_formats:
      #The SQLite Query to run#
      sql_query: |
          SELECT
            SruDbIdMapTable.IdBlob AS Fullname,
            BasenameN(SruDbIdMapTable.IdBlob,2) AS Name,
            Sum(WindowsNetworkDataUsageMonitor.BytesSent) AS "Total Bytes Sent",
            Sum(WindowsNetworkDataUsageMonitor.BytesRecvd) AS "Total Bytes Received",
            SUM(WindowsNetworkDataUsageMonitor.BytesSent) +
              SUM(WindowsNetworkDataUsageMonitor.BytesRecvd) AS "Total Bytes",
            GROUP_CONCAT(DISTINCT WlanSvcInterfaceProfiles.Name) AS "Unique Network Listing"
          FROM
            WindowsNetworkDataUsageMonitor
          INNER JOIN SruDbIdMapTable ON WindowsNetworkDataUsageMonitor.AppId = SruDbIdMapTable.IdIndex
          LEFT JOIN WlanSvcInterfaceProfiles ON WindowsNetworkDataUsageMonitor.L2ProfileId = WlanSvcInterfaceProfiles.ProfileIndex
          GROUP BY WindowsNetworkDataUsageMonitor.AppId
          ORDER BY "Total Bytes" DESC
  - worksheet_name: 'CycleChart'
    worksheet_type: 'chart'
    attributes:
      insert_cell: 'A1'
      chart:
        type: 'column'
        subtype: 'stacked'
      legend:
        position: 'left'
      size:
        x_scale: 50
        y_scale: 2
      series:
        - name: 'UniqueAppResourceUsage!$F$1'
          categories: 'UniqueAppResourceUsage!$B$1:$B${UniqueAppResourceUsage[EndRow]}'
          values: '=(UniqueAppResourceUsage!$F$1:$F${UniqueAppResourceUsage[EndRow]})'
        - name: 'UniqueAppResourceUsage!$K$1'
          values: '=(UniqueAppResourceUsage!$K$1:$K${UniqueAppResourceUsage[EndRow]})'
  - worksheet_name: 'BytesChart'
    worksheet_type: 'chart'
    attributes:
      insert_cell: 'A1'
      chart:
        type: 'column'
        subtype: 'stacked'
      legend:
        position: 'left'
      size:
        x_scale: 50
        y_scale: 2
      series:
        - name: 'UniqueAppResourceUsage!$D$1'
          categories: 'UniqueAppResourceUsage!$B$1:$B${UniqueAppResourceUsage[EndRow]}'
          values: '=(UniqueAppResourceUsage!$D$1:$D${UniqueAppResourceUsage[EndRow]})'
        - name: 'UniqueAppResourceUsage!$E$1'
          values: '=(UniqueAppResourceUsage!$E$1:$E${UniqueAppResourceUsage[EndRow]})'
        - name: 'UniqueAppResourceUsage!$I$1'
          values: '=(UniqueAppResourceUsage!$I$1:$I${UniqueAppResourceUsage[EndRow]})'
        - name: 'UniqueAppResourceUsage!$J$1'
          values: '=(UniqueAppResourceUsage!$J$1:$J${UniqueAppResourceUsage[EndRow]})'
  - worksheet_name: 'OperationsChart'
    worksheet_type: 'chart'
    attributes:
      insert_cell: 'A1'
      chart:
        type: 'column'
        subtype: 'stacked'
      legend:
        position: 'left'
      size:
        x_scale: 50
        y_scale: 2
      series:
        - name: 'UniqueAppResourceUsage!$G$1'
          categories: 'UniqueAppResourceUsage!$B$1:$B${UniqueAppResourceUsage[EndRow]}'
          values: '=(UniqueAppResourceUsage!$G$1:$G${UniqueAppResourceUsage[EndRow]})'
        - name: 'UniqueAppResourceUsage!$H$1'
          values: '=(UniqueAppResourceUsage!$H$1:$H${UniqueAppResourceUsage[EndRow]})'
        - name: 'UniqueAppResourceUsage!$L$1'
          values: '=(UniqueAppResourceUsage!$L$1:$L${UniqueAppResourceUsage[EndRow]})'
        - name: 'UniqueAppResourceUsage!$M$1'
          values: '=(UniqueAppResourceUsage!$M$1:$M${UniqueAppResourceUsage[EndRow]})'
  - worksheet_name: 'FaceTimeChart'
    worksheet_type: 'chart'
    attributes:
      insert_cell: 'A1'
      chart:
        type: 'column'
        subtype: 'stacked'
      legend:
        position: 'left'
      size:
        x_scale: 50
        y_scale: 2
      series:
        - name: 'UniqueAppResourceUsage!$C$1'
          categories: 'UniqueAppResourceUsage!$B$1:$B${UniqueAppResourceUsage[EndRow]}'
          values: '=(UniqueAppResourceUsage!$C$1:$C${UniqueAppResourceUsage[EndRow]})'
  - worksheet_name: 'NetworkChart'
    worksheet_type: 'chart'
    attributes:
      insert_cell: 'A1'
      chart:
        type: 'column'
        subtype: 'stacked'
      legend:
        position: 'left'
      size:
        x_scale: 50
        y_scale: 2
      series:
        - name: 'UniqueAppNetworkUsage!$C$1'
          categories: 'UniqueAppNetworkUsage!$B$1:$B${UniqueAppNetworkUsage[EndRow]}'
          values: '=(UniqueAppNetworkUsage!$C$1:$C${UniqueAppNetworkUsage[EndRow]})'
        - name: 'UniqueAppNetworkUsage!$D$1'
          values: '=(UniqueAppNetworkUsage!$D$1:$D${UniqueAppNetworkUsage[EndRow]})'
